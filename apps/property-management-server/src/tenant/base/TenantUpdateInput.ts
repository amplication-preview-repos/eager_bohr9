/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsDate } from "class-validator";
import { HouseWhereUniqueInput } from "../../house/base/HouseWhereUniqueInput";
import { Type } from "class-transformer";
import { RentUpdateManyWithoutTenantsInput } from "./RentUpdateManyWithoutTenantsInput";

@InputType()
class TenantUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => HouseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HouseWhereUniqueInput)
  @IsOptional()
  @Field(() => HouseWhereUniqueInput, {
    nullable: true,
  })
  house?: HouseWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  leaseEndDate?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  leaseStartDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => RentUpdateManyWithoutTenantsInput,
  })
  @ValidateNested()
  @Type(() => RentUpdateManyWithoutTenantsInput)
  @IsOptional()
  @Field(() => RentUpdateManyWithoutTenantsInput, {
    nullable: true,
  })
  rents?: RentUpdateManyWithoutTenantsInput;
}

export { TenantUpdateInput as TenantUpdateInput };
