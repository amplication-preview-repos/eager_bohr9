datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Tenant {
  createdAt      DateTime  @default(now())
  email          String?
  firstName      String?
  house          House?    @relation(fields: [houseId], references: [id])
  houseId        String?
  id             String    @id @default(cuid())
  lastName       String?
  leaseEndDate   DateTime?
  leaseStartDate DateTime?
  phoneNumber    String?
  rents          Rent[]
  updatedAt      DateTime  @updatedAt
}

model House {
  address       String?
  createdAt     DateTime @default(now())
  id            String   @id @default(cuid())
  isOccupied    Boolean?
  numberOfRooms Int?
  rents         Rent[]
  tenants       Tenant[]
  updatedAt     DateTime @updatedAt
}

model Rent {
  amount      Float?
  createdAt   DateTime        @default(now())
  dueDate     DateTime?
  house       House?          @relation(fields: [houseId], references: [id])
  houseId     String?
  id          String          @id @default(cuid())
  paymentDate DateTime?
  status      EnumRentStatus?
  tenant      Tenant?         @relation(fields: [tenantId], references: [id])
  tenantId    String?
  updatedAt   DateTime        @updatedAt
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Role {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  name        String?
  updatedAt   DateTime @updatedAt
}

model Landlord {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  name        String?
  updatedAt   DateTime @updatedAt
}

enum EnumRentStatus {
  Option1
}
